//选择排序Selection sort 
/*每一次从待排序的数据元素中选出最小（或最大）的一个元素
      顺序放在已经排好序的数列的最前（或最后）直到全部待排序的数据元素排完*/
      /* 例如  5 2 1 3 4 排序
      *  one   1 5 2 3 4
         two   1 2 5 3 4
               1 2 3 5 4
               1 2 3 4 5
      */
#include <stdio.h>;//头文件
int main()//主函数
{
    int a[1001];//定义一个数组
    int n, i, j, t;//定义变量
    scanf_s("%d", &n);//n为要排序的数的个数
    //输入需要排序的数
    for (i = 0;i < n;++i)//for循环
    {
        scanf_s("%d", &a[i]);//输入要排列的数字   即赋值数组
    }//接下来进行排序  这里是关键！！！！！
    for (i = 0;i < n - 1;++i)//因为每次需要和a[i]后面的数进行比较,所以到a[n-2](倒数第2个元素)就行
    {
        for (j = i + 1;j < n;++j)//j从i后一个开始,a[i]与a[j]进行比较
        {
            if (a[i] > a[j])//a[i]为当前值,若是比后面的a[j]大,进行交换
            {
                t = a[i];//将a[i]的值赋给t
                a[i] = a[j];//将a[j]的值赋给a[i]
                a[j] = t;//将t的值赋给a[j]  即完成a[i]与a[j]的交换
            }
        }//每排序一次,就会将a[i](包括a[i])之后的最小值放在a[i]的位置
        //接下来打印排序后的数组
        for (j = 0;j < n;++j)//for循环
        {
            printf("%-5d", a[j]);//%-5d即每个数之间空四格   printf打印数组
        }  printf("\n\n");//显示出每一次排序时的结果
    }/*若不想显示过程  或不想打印函数过于冗杂 则在此处输入
     for(i=0;i<n;i++)
     {
         printf("%d ",a[i]);
     }            代替前三行代码即可*/
    return 0;
}
